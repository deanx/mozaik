import React, { Component, PropTypes } from 'react';
import reactMixin from 'react-mixin';
import { ListenerMixin } from 'reflux';
import Mozaik from 'mozaik/browser';
import Cache from 'memory-cache';
import moment from 'moment';

class Drivers extends Component {
    constructor(props) {
        super(props);

        this.state = {};
    }


    getApiRequest() {
        let id = 'drivers.list';
        let params = {};
        return { id, params };
      }

      onApiData(ride) {
        let key = 'drivers.list.' + moment(ride.timestamp).year() + '.' + moment(ride.timestamp).dayOfYear();
        let totalList = Cache.get(key) || [];
        totalList.push(ride);
        Cache.put(key, totalList);
        this.setState({driversList:totalList});
      }

    render() {
        const list = this.state.driversList || [];
        return (
          <div id='drivers-list'>
            {
              list.map(
                (element) => (
                  <div>{element.driverID}</div>
                )
              )
            }
          </div>
        );
    }
}

Drivers.displayName = 'Drivers';

reactMixin(Drivers.prototype, ListenerMixin);
reactMixin(Drivers.prototype, Mozaik.Mixin.ApiConsumer);

export default Drivers;
